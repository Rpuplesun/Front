
- 김성용 강사(프론트 엔드 주말)
- 이메일: korpg95274@gmail.com
- 메일 제목: "프론트엔드" 성함
- 메일 내용: 오류 내용, 작성한 코드, 질문 사항
- 수업자료:
	koreastudyroom.com
	핸드폰 번호, 번호 뒤 4자리 비밀번호 로그인
	"프론트엔드 과정" 클릭

	단톡방(오픈채팅)
	https://open.kakao.com/o/gMiUwhae
	참여코드: 1400c

- 수업방식: 이론 -> 메모장(복습) -> 예제 -> 실습 => 프로젝트

- 프로젝트:
	2가지 유형
	- 주말 + 평일 가능하신 분
	- 주말만

	Q&A: 개인 프로젝트는 안되나요?
		됩니다 = 한번도 제대로 성공된 적을 본 적이 없습니다.
	기본적으로 여러분들이 바쁘세요(학업, 업무, 가사).
		팀 프로젝트는 족쇄, 나에게 채찍질 해주는 좋은 자극제 역할
		또한, 취업시 타인이 작성한 코드를 분석하게 되는 경우가 대다수
			-> 코드 리뷰와 다른 상대방의 코드를 분석할 수 있는 경험

	퍼블리싱 프로젝트
	:스토리 보드 - 디자인 - 구현
	:기간은 HTML이 종료되는 대로 조편성

	REACT 프로젝트
	:스토리보드 - 디자인 - 구현 - 더미데이터 생성 - 전역 상태관리 - 비동기 통신
	:기간은 nodeJS 종료와 동시에 조편성

-공강일정:
	공휴일 <--- 안쉬는 날도 있음
	미리 안내드릴 예정

-------------------------------------------------------------------------

* 제가 여러분들에게 약속해줄 수 있는 것

	저는 비전공자 출신 + 전공자
	여러분들과 똑같이 코리아IT 프론트엔드 주말반으로 코딩 세계에 입문
	최하 성적으로 학원 들어왔습니다. ---------> 최고 성적으로 졸업
	삼성, 서울대, 카이스트 ... 해커톤 대회, SW경진대회 입상
	입사 시 초봉 4000이상의 프론트 엔드 개발자 취업
	= 즉, 컴퓨터 아예 모르시는 분도 비전공자라도 취업할 수 있게 해드릴 수 있다구요

	얻게 되는 포트폴리오와 프로젝트
	=> 계획대로 프로젝트 팀에 참여하셨다면 인터렉티브 퍼블리싱 프로젝트 (1개 ~ 3개)
	=> ReactJS Toy project (1개)
	=> ReactJS + nodeJS[제작] 연동된 MINI PROJECT (1개)
	=> 계획대로 프로젝트 팀에 참여하셨다면 더미데이터를 활용한 React Project (1개)
	
	모르고 넘어가지 않게 해드릴게요
	

* 여러분들이 저에게 약속해줘야 하는 것
	
	학원 출신 === 녹화
	
	제가 (1~3개월) 열심히 들었어요 누구보다
	하루 이틀 빼먹으니까 다음 수업이 이해가 안돼요
	나머지 3개월 다 녹화했습니다.
	무슨 일이 생겨서 수업을 못들으면 그 주 수업 듣기 전에 녹화 본 보세요	

	가급적이면 프로젝트 하세요
	- 해본 사람과 안 해본 사람의 차이는 큽니다
	- 개발자에게 협업이란 필수
	
-------------------------------------------------------------------------

* 만약 지금 내가 다른 사람들에 비해 부족한다고 느낄 때

	1. 가장 좋은 방법으론 실강에서 저를 이용하세요 , 메일로 저를 이용하세요
	2. 조교 선생님 = 저도 조교 출신
	   멘토분한테 보강신청 ex) HTML 구조 잡는 방법에 대해서 잘 모르겠습니다.

	BEST 2

	1. 저 이해는 했는데.. 어떻게 사용할지 모르겠어요
		답은 없죠. 앞으로 이 구조나 이 사용법 몇번 쓸까요
	
	2. 실패는 당연하다.
		개발자는 에러를 내는 직업

---------------------------------------------------------------------

	프론트 엔드
	: 사용자 입장에서 불편함이 없도록 눈에 보이는 화면을 설계하고 백엔드에서 받아온 데이터를
	어떻게 화면에 표출할지 고민하는 과정

	백 엔드
	: 회원정보, 상품정보와 같은 데이터들을 어떻게 저장하고 관리할지와 어떤 로직을 구성해야 사용자들에게
	보다 빠른 속도로 데이터 전달이 가능할지 표현하는 과정 

---------------------------------------------------------------------

	UI, UX

	
	UI (USER INTERFACE)
	: 사용자 레이아웃(화면)
	사용자가 제품을 사용할 때 마주하게 되는 면 (폰트, 컬러, 레이아웃)

	UX (USER EXPERIENCE)
	: 사용자 경험(행위)
	사용자가 제품을 직간접적으로 사용하면서 얻는 만족감

	=> 검색창을 예시로 하면, 검색창 입력, 버튼은 UI, 검색 버튼을 누르는 행위 UX
	즉, UI/UX를 고려하여 웹 사이트를 만든다는 것은 웹 화면 보고 사용자가 이용했을 때
	불편함이나 제약사항이 없는지 고려하여 만든다는 것

---------------------------------------------------------------------

프론트 엔드 구성

	웹 기획자
	: 스토리 보드라고 하는 문서 자료로 화면을 구성하고 작성하는 사람
	ex) 배너의 위치, 로그인 화면 위치, 페이지 구성 및 흐름도

	웹 디자이너
	: 완성된 스토리 보드를 기반으로 명확하게 로고, 이미지, 색상, 컨셉 등 디자인을 구성하는 사람
	
	웹 퍼블리셔
	: 완성된 스토리보드와 디자인을 가지고 직접 html , css를 이용하여 웹 사이트를 구현
	: 간단한 js를 통한 이벤트도 구현

	프론트 엔드 개발자
	: js를 통한 비동기 통신 구현
	: js 심화 과정을 통한 자바스크립트의 실행 과정 및 순서를 파악하여 능숙하게 다룰 수 있어야함
	: 다양한 라이브러리(도구)를 활용하여 적재 적소에 이벤트를 구현
	: 백엔드 서버와 통신하여 얻은 데이터를 어떻게 보여줄 것인가 고민

---------------------------------------------------------------------

프로젝트 포지션

	CTO: 기술 이사 (최고 경력자)
	PMO: 해당 프로젝트의 최고 관리자, 전체 프로젝트를 관리하는 포지션

	PM: 프로젝트를 지휘하는 책임자 ( 일정을 조율하고 주도 )
	PL: 각 파트별 리더, 실질적으로 설계와 구현과 같은 실무적인 부분을 담당

	PA: 프로젝트 산출물 담당장이며 실무자 ( 개발자 )
	    주어진 시간과 비용에 맞게 프로젝트를 완료할 수 있도록 산출한다 (뼈를 갈아 넣습니다)

---------------------------------------------------------------------	

	HTML이란?	
	Hypertext ( 웹 페이지에서 다른 페이지로 이동하거나 페이지 내 다른 데이터에 접근할 수 있도록 하는 것 )
	Markup Language ( 웹 페이지 내 컨텐츠를 어떻게 표현해야하는지 명령하는 언어 )

	=> 웹 페이지를 이동할 수 있게 해주고 웹 페이지 내 컨텐츠를 제작하기 위해 사용하는 언어
	=> 웹 페이지 제작할 때 쓰는 언어

	태그 형태를 띄고 있다는 특징
	: 옷 살 때 TAG 해당 상품이 어떤 상품인지 설명하는
	-> HTML에선 해당 코드가 어떠한 정보를 담고 있는지 알려주기 위한 것이며 형태는
	<명령어> ... </명령어>

---------------------------------------------------------------------	
	
	request 와 response
	요청과 응답

	나는 이런 URL을 줄테니까 그에 맞는 화면과 데이터 내놔(전달)
	(요청) ----------------------------------- (응답)

	예를 들면 무신사 홈페이지에 접속 했을 때 상품마다 URL 끝에 코드가 달라지는데
	프론트 엔드 개발자는 해당 URL로 화면 레이아웃을 요청 뒤 코드를 백엔드 서버에 전달해
	
	해당 코드에 맞는 데이터를 받아와 화면에 표출

	HTTP request
	HTTP response 

	HTTP (HyperText Transfer Protocol)
	인터넷에서 데이터 주고받을 때 사용하는 규약 ( 규칙 , 약속 )
	따라서 주소에 http, https가 붙으면 해당 규약을 사용해서 데이터 주고 받게다는 뜻

	s의 유무 http에 보안적인 요소가 추가된 것을 https라고 합니다
	
---------------------------------------------------------------------	
	
	google.com
	naver.com을 주소창에 입력했을 때 벌어지는 일


	1. naver.com 입력
	2. 브라우저가 도메인(naver.com)을 통해 대응하는 주소 확인
	3. HTTP를 이용하여 도메인서버(주소록: 도메인 모아둔 곳)에 맞는 도메인을 찾아내 페이지 요청
	4. 브라우저가 해당 서버의 HTML을 요청
	5. WAS(서버 도우미) DB를 통해서 백데이터 데이터를 가지고 와요
	6. 작업 처리 결과를 서버에 전송하고 서버는 html 문서를 브라우저에게 응답
	7. 브라우저는 웹 페이지 내용물을 파싱 후 출력

---------------------------------------------------------------------
	
	HTML 파싱

	1. 브라우저가 전달된 HTML 분석 (브라우저 로더)
	2. HTML (돔트리 생성), CSS ( CSSOM ) 
	3. 돔트리에서 JS 적용
	4. CSSOM과 돔트리가 합쳐서 랜더링 트리
	5. HTML에 CSS결정 후 레이아웃 과정 (크기, 위치 계산)
	6. 페인트 ( 화면에 그리는 작업 )

---------------------------------------------------------------------

	html 구조
	
		<html>
			<head>	---- 창 이름, 웹 페이지 정보, 검색 엔진에 노출될 정보
			</head>
			<body>	---- 보이는 화면 (내용) 
			</body>
		</html>

---------------------------------------------------------------------

	VScode
	: 에디터 툴
	: html은 메모장이나 텍스트를 사용할 수 있는 곳이라면 어디든 사용 가능하지만
	: 불편하기 때문에 다양한 기능을 지원하여 편리하게 개발 할 수 있도록 해주는 도구

	https://code.visualstudio.com/download

	-Korean Language Pack for Visual Studio Code
	-Live Server
	-auto rename tag
	-prettier

---------------------------------------------------------------------







	